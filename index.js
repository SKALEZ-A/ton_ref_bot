const { Telegraf, Markup } = require("telegraf");
const path = require("path");
const axios = require("axios");

// Replace 'YOUR_BOT_TOKEN' with your actual bot token
const bot = new Telegraf("YOUR_BOT_TOKEN");

// Helper function to get the image path
const imagePath = (fileName) => path.join(__dirname, "images", fileName);

// Function to register the user
const registerUser = async (userId, username, inviterUsername = "") => {
  try {
    const response = await axios.post("https://walledb.onrender.com/api/Cluster0/register", {
      userId,
      inviterUsername,
      username,
    });
    return response.data;
  } catch (error) {
    console.error('Error registering user:', error.response.data);
    throw error;
  }
};

bot.start(async (ctx) => {
  const userId = ctx.from.id;
  const username = ctx.from.username || `user${userId}`;
  const inviterUsername = ctx.startPayload || ""; // Extract inviter username from start payload if available

  try {
    await registerUser(userId, username, inviterUsername);
    ctx.replyWithPhoto(
      { source: imagePath("description.jpg") },
      {
        caption: `*Welcome, @${username}! to Ton Diamond ðŸ’Ž*\n\nYou are now a Builder on Ton Blockchain and can be entitled to revenues generated by *Ton DiamondðŸ’ŽðŸ’Ž!!*`,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Play",
                web_app: { url: "https://walle-bot.vercel.app/" },
              },
              { text: "Join community", callback_data: "join_community" },
            ],
          ],
        },
      }
    );
  } catch (error) {
    ctx.reply('Welcome Back!');
  }
});

bot.launch();
